buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

//repositories {
//	maven {
//		name = "CurseForge"
//		url = "httpss://minecraft.curseforge.com/api" + project.curseforge_key
//	}
//}

repositories {
	flatDir {
		dirs 'libs'
	}
}


apply plugin: 'forge'
apply plugin: 'maven-publish'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version = "MC${minecraft_version}-${mod_version}"
group= "kr.loveholy.exastrisrebirth" // https://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Ex-Astris-Rebirth"
minecraft {
    version = "${minecraft_version}-${forge_version}"
    assetDir = "eclipse/assets"
	 
	 replace "@VERSION@", project.version
	 replaceIn "ExAstrisRebirthData.java"
	
}

sourceCompatibility = 7
targetCompatibility = 7


dependencies {
	//FOOD PLUS,
    compile fileTree(dir: 'libs', include: ['*.jar', '*.zip'])
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

